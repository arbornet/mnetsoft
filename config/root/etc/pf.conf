#	$OpenBSD: pf.conf,v 1.54 2014/08/23 05:49:42 deraadt Exp $
#
# See pf.conf(5) and /etc/examples/pf.conf

#set skip on lo

#block return	# block stateless traffic
#pass		# establish keep-state

# By default, do not permit remote connections to X11
#block return in on ! lo0 proto tcp to port 6000:6010

#
# GREX
#
# Grex customizations follow.  Note that everything before this line
# is boiler-plate configuration from the operating system vendor.  Keeping
# that text at the top should make integrating future changes easier.
#

ext_if="em0"
internal_net_addrs = "162.202.67.158"

#
# Values of those who are permitted outbound access to the Internet.
# Note: By default, new users are *not* permitted any net access whatever.
#
user_id = "131073"
verified_group = "20, 131074, 131076, 131074"	# staff, internet, members, verified
people_group = "131077"			# people
unverified_group = "131079"		# new users
pub_tcp_ports = "43, 53, 70, 79, 80, 113, 443, 6667, 6697"
pub_udp_ports = "53, 517, 518"
smtp_ports = "25, 2025"
icmp_types = "echoreq"

# ICMP users can use ping.  Normally, these are just grex staff members.
staff_users = "root, cross, gelinas, i, kentn, tonster, unicorn"

# Basic options.
set loginterface none
set optimization normal
set block-policy return

#
# Blocking rules.
#
# Block spammers and crackers/script-kiddies here.  Note that
# these rules match before anything else, and do not need to be
# repeated later.
#
table <blockedcidrs> persist file "/etc/blocked.cidr"
table <cblockedcidrs> const { 66.101.226.96/32, 62.121.133.131/32 }

block return quick on $ext_if from { <cblockedcidrs>, <blockedcidrs> } to any
block return quick on $ext_if from any to { <cblockedcidrs>, <blockedcidrs> }

#
# Grex's filtering rules.
#
# Note: Ordering here is significant.  The *last* matching rule
# decides the action to be taken, unless the quick specifier is
# attached to the rule, in which case it is considered effective
# as soon as it matches.
#

# By default, block everything out, pass everything in.
block out log on $ext_if
pass in all

#
# Allow restricted outbound access for socially-validated user, who
# in turn, have effective gid == $people_group.
#
pass out quick on $ext_if \
    proto tcp \
    from any to any \
    port { $pub_tcp_ports } \
    group $people_group \
    keep state

pass out quick on $ext_if \
    proto udp \
    from any to any \
    port { $pub_udp_ports } \
    group $people_group \
    keep state

pass out quick on $ext_if \
    proto tcp \
    from any to news.dotsrc.org \
    port nntp \
    group $people_group \
    keep state

# Allow all outbound network access for verified users.
pass out quick \
    proto { tcp udp } \
    group { $verified_group } \
    keep state

# System-style users have all outbound access, regardless of group.
pass out quick \
    proto { tcp udp } \
    user { < $user_id, $staff_users } \
    keep state

# Allow outbound ICMP access for staff_users, regardless of group.
# Note: the user restriction isn't working here, but we want to
# know who is doing this.
pass out log quick \
    inet proto icmp \
    icmp-type { $icmp_types } \
    keep state

# Block access to the mail port on localhost to stop spammers.
block out proto { tcp udp } group { $unverified_group }
pass out on lo0 proto tcp to any port { $smtp_ports } group { $verified_group }

# Make sure that root can always send out, as a safety net for a bad rule.
pass out proto { tcp udp } user root

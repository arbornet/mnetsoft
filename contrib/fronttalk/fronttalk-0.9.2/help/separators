                          Fronttalk Separators

Separators are basically template strings that control the format in which
various things are printed out in Fronttalk.  There are separator strings
defining the format of item headers, response headers and a lot of other
stuff.  By redefining them, the look of the system can be substantially
modified.  For a full list of the different separators, and instructions
on how to redefine them, see "HELP DEFINE".

When Fronttalk executes a separator it just prints it out, substituting
appropriate values in whenever it sees a special code prefixed with a %
sign.  For example, the response header might be defined like this:

    DEFINE RSEP "Response %r of %n - Entered by %a%(V <hidden>%):"

When executed, the %r will be replaced with the current response number,
the %n will be replaced by the total number of responses in the item, the
%a will be replaced by the full name of the author.  The "%(V <hidden>%)"
causes the string " <hidden>" to be printed if the response has been hidden.
So the output might like:

    Response 6 of 13 - Entered by Jan Wolter:

There are two kinds of %-codes.  The first three in the example above are
"functions" that simply insert their values into the string.  The last one
is a "condition" that causes a substring of the pattern to be output only
if a particular condition is true.

In addition to %-codes, separator strings may contain the usual backslash
codes, like '\n' for a newline and '\t' for a tab and '\\' for a backslash. 
A '\n' is automatically appended to all separators, unless a '\c' appeared
in the string.

Some separators are "item separators" and others are "conference separators".
Their syntax is the same, but they have different sets of functions and
conditionals.

  ******  FUNCTIONS  ******

The general form of a separator function is:

    %<zflag><width>.<precision><code-letter>

where only the % and the <code-letter> are required.  The <zflag> can be
'z' or 'Z'.  If it is given, and the value of the function is zero, then
'no' or 'No' are printed instead of the number zero.  The <width> is a
numerical value giving the minimum width of the field in which the value
is to be printed.  If the value of the function is shorter than the given
width, then it is padded out to that size with spaces.  It will be
right-justified, unless the width is given with a - sign, in which case
the value will be left-justified.  The precision is another numerical
value, alway prefixed by a dot if it is given.  It gives the maximum length
of the value.  If the value is longer, it will be truncated to that length.

The following functions work in both item and conference separators:

   %%   - Output a '%'.
   %c   - Suppress terminating newline (equivalent to '\c').
   %S   - If output of last function was a number other than one, output 's'.
          Thus we might say "%n new response%s".
   %X   - Print <width> spaces.  If no width is given, use value of last '%T'.
   %T   - Save the <width> given for use by future %X functions.  (Default 1).

For lists of the other functions see "HELP ITEMFUNC" and "HELP CONFFUNC".

  ******  CONDITIONALS  ******

The general form of a separator conditional is one of:

   %(<not><count><code-letter><string>%)
   %(<not><count><code-letter><string>%E<else-string>%)

If <not> is given as a ! or ~ then the conditional is negated.  The <count>
is an optional number (used in only a few conditionals).  The <code-letter>
determines what test to make.  If the test is true, then the <string>
argument is output.  If it is false then nothing is output in the first case,
while the <else-string> is output in the second case.

The <code-letter> can be replaced by a parenthesized expression, like
"(a|(b&~c))" where the terms are all conditional code letters and the operators
are '|' for 'or', '&' for 'and' and '!' or '~' for 'not'.

One of the conditional that works in both item and conference separators is
a weird one:

  %(<count>c<string>%)    - output <string> count times.

The other is '%(p' which is true if the last function returned a numeric value
other than one.

For lists of the other conditionals see "HELP ITEMCOND" and "HELP CONFCOND".

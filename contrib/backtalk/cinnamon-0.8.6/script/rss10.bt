% Backtalk Cinnamon Syndication Interface -- (c) 2004, Jan Wolter
%
% Output Script - RSS 1.0 Version
%
% NOTES:
%
%   - There are no limits on the numbers of items or the lengths of fields
%     in RSS 1.0.

flavor(config)+ include

% <fullnamevar> <emailvar> usrstr <string>
%  Given a full name and an email address, make a string like
%  "<name> (mailto:<email>)"

/usrstr {
   dict begin
   dup defined {exec} {pop ()} ifelse /em xdef
   dup defined {exec} {pop ()} ifelse /fn xdef
   `
   fn {
     fn quote
   } if
   em {
     fn { ( ) } if
     (\(mailto:)em quote(\))
   } if
   '
} def


/rss_start {
   /http_content_type (text/xml) store

   (<?xml version="1.0" encoding="utf-8"?>
<rdf:RDF
  xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
  xmlns="http://purl.org/rss/1.0/"
  xmlns:dc="http://purl.org/dc/elements/1.1/"
>
)
} def


/rss_start_channel {

   /rss_language defined ! {/rss_language (en-us) def} if

   (  <channel rdf:about="http://)
   	`backtalkurl(/)flavor scriptname(?)cgiquery'quote(">
    <title>)rss_title quote(</title>
    <link>)rss_link quote(</link>
    <description>)rss_description quote(</description>
)

  /rss_language defined {
    (    <dc:language>)rss_language quote(</dc:language>\n)
  } if

  /rss_copyright defined {
    (    <dc:rights>)rss_copyright quote(</dc:rights>\n)
  } if

  /rss_managingeditor_name defined  /rss_managingeditor_email defined or {
    (    <dc:publisher>)
      /rss_managingeditor_name /rss_managingeditor_email usrstr
    (</dc:publisher>\n)
  } if

% Haven't found an RSS-1.0 equivalent of this
% /rss_webmaster_name defined  /rss_webmaster_email defined or {
%   (    <webMaster>)/rss_webmaster_name /rss_webmaster_email usrstr
%	(</webMaster>\n)
% } if

  /rss_pubdate defined {
    (    <dc:date>)rss_pubdate itime(</dc:date>\n)
  } if

% Haven't found an RSS-1.0 equivalent of this
% /rss_lastbuilddate defined {
%   (    <lastBuildDate>)rss_lastbuilddate itime(</lastBuildDate>\n)
% } if

  /rss_image_url defined {
    (    <image rdf:resource=")rss_image_url quote( />\n)
  } if

  /rss_textinput_link defined {
    (    <textinput rdf:resource=")rss_textinput_link quote(" />\n)
  } if

  (    <items>\n      <rdf:Seq>\n)
  % Push the 'rss10_item_ref' variable name on the stack at this point.
  % It'll get replaced by the value of that variable at output time, which
  % won't be until we've done all the items
  /rss10_item_ref () def
  /rss10_item_ref
  (      </rdf:Seq>\n    </items>\n)

  (  </channel>\n)

  /rss_image_url defined {
    (  <image rdf:about=")rss_image_url quote(>\n)
    (    <url>)rss_image_url quote(</url>\n)
    (    <link>)rss_link quote(</link>\n)
    (    <title>)rss_image_title quote(</title>\n)
% Haven't found an RSS-1.0 equivalent of these
%   /rss_image_description defined {
%     (    <description>)rss_image_description quote(</description>\n)
%   } if
%   /rss_image_width defined {
%     (    <width>)rss_image_width(</width>\n)
%   } if
%   /rss_image_height defined {
%     (    <height>)rss_image_height(</height>\n)
%   } if
        (  </image>\n)
  } if

  /rss_textinput_link defined {
    (  <textinput rdf:about=")rss_textinput_link quote(">\n)
    (    <title>)rss_textinput_title quote(</title>\n)
    (    <description>)rss_textinput_description quote(</description>\n)
    (    <name>)rss_textinput_name quote(</name>\n)
    (    <link>)rss_textinput_link quote(</link>\n)
    (  </textinput>\n)
  } if

  % Initialiaze item count
  /rss_item_count 0 def

} def


/rss_item {

  % output item
  (  <item rdf:about=")rss_link quote(">
    <title>)rss_title quote(</title>
    <link>)rss_link quote(</link>
)
  /rss_description defined {
    (    <description>)rss_description quote(</description>\n)
  } if

  /rrs_guid defined {
    (    <dc:identifier>)rss_guid quote(</dc:identifier>\n)
  } if

  /rss_author_name defined /rss_author_email defined or {
    (    <dc:creator>)/rss_author_name /rss_author_email usrstr
    	(</dc:creator>\n)
  } if

  /rss_pubdate defined {
    (    <dc:date>)rss_pubdate itime(</dc:date>\n)
  } if

  (  </item>\n)

  % add item reference to list
  /rss10_item_ref `rss10_item_ref
    (        <li rdf:resource=")rss_link quote(" />\n)' def

  % No maximum number of item.  Always return false
  0

} def


/rss_end_channel {
  % do nothing
} def


/rss_end {
   (</rdf:RDF>\n)
} def

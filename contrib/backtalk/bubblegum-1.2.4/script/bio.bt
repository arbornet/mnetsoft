% Backtalk Bubblegum Interface -- (c) 1996, Jan Wolter, Steve Weiss
%
% bio script
%
% The bio script displays information about any user in the system and
% allows users to edit their own personal information.  It also allows
% administrators to edit other users personal information.
%
% Query Parameters:
%    login=	Login name of user who's bio we want to look at.
%    noedit=	If defined, show bio as others see it, even if it is mine.
%    errormsg=  If defined, an error message to display at top of page.

% Decline to run for obvious email address collectors
browser 0 lt {(Not a browser)} if

% load some button definitions and sizes
/butsel 5 defconstant flavor(buttondef)+ include
flavor(config)+ include

% top-level user information macros
(lib/userinfo) include

% find fullname, status, and home directory from the password info
login userinfo 
   /status xdef
   /laston xdef
   /biodir xdef
   % from unix passwd files, delete text after "," in fullname field
   nopwedit {(,) clip exch pop} if /fullname xdef
   pop	% discard group id number
   pop	% discard user id number

% "me" is true if the user is viewing his own bio
/me login id eq def

% set "edit_mode" if we are going to offer the user the chance to change things
/edit_mode /noedit defined ! me amadm or and def

% output page header
(<HTML><HEAD>
<TITLE>) bbsname ( Personal Info - User ) login (</TITLE>
<BASE HREF=")backtalkurl(/)flavor(">
<STYLE TYPE="text/css">
<!--
TEXTAREA {font-family: monospace;}
//-->
</STYLE>
</HEAD>
<BODY )background(>)
global_header
(<H1> Personal Info - User ") login ("</H1>\n)
/oneconf defined ! {(<A HREF=begin>)entrance_button(</A><P>\n)} if

% display errmsg if it is defined and non-null
/errmsg defined { errmsg { (<STRONG>)errmsg(</STRONG><P>\n)} if } if

% userinfo returns () if there is no such user
biodir ! { (No account currently exists for )login(.) stop
  } if

% initialize default values
/errmsg defined {
  /privacy defined ! {/privacy 0 def} if
} {
  /useplan constant {
    % load the user's .plan file.
    (*.plan) login pathname /bio_fn xdef

    bio_fn readable {
      % plan is readable -- load it.
      /plan bio_fn read def
      plan ! { /plan ( ) def } if
      /privacy 0 def
    }{
      % plan is not readable -- user wants privacy.
      /privacy 1 def
      /plan () def
    } ifelse
  }{
    % load settings from the user's .backtalk file
    login getinfo
  }ifelse
}ifelse

% If anonymity is set, all user info is private
mayseefname ! {/privacy 1 def} if

% Print message to toggle between edit and display mode
me amadm or {
  (<A HREF="bio?login=) login
  edit_mode
    {(&noedit=Y">View your settings as others will see them.)}
    {(">You may change any of this data about )
     amadm {login} {(yourself)} ifelse (.)}
    ifelse
  (</A><HR>\n)
} if

% display errmsg if it is defined and non-null
/errmsg defined { errmsg {
  (<P><FONT COLOR=red>
  Please fix the following errors:\n<PRE>)errmsg(</PRE></FONT>\n)
} if } if

edit_mode {

  % bio is for me - create a form and fill in current values

  (<FORM METHOD=POST ACTION=changebio>\n)
  status {(<P>Account Status: )status 1 eq {(U)}{(I)}ifelse(nvalidated<P>)}if
  (<INPUT TYPE=hidden NAME=login VALUE=)login(>\n)
  /useplan constant {

     % version for systems using .plan files

     (<STRONG>Full Name</STRONG>: <INPUT NAME=fullname VALUE=")fullname
     nopwedit {(" TYPE=hidden>)fullname} {(">)} ifelse
     (<BR><STRONG>Plan</STRONG>:<BR>
     <TEXTAREA NAME="plan" ROWS=20 COLS=72 WRAP=HARD>)plan(</TEXTAREA><BR>\n)

  } {

     % version for systems using .backtalk files

     (<INPUT NAME=privacy TYPE=checkbox VALUE=1) privacy {( CHECKED)} if
     (> Do not allow other users to see this information<P>
     <STRONG>Full Name</STRONG>: <INPUT NAME=fullname VALUE=")fullname
     nopwedit {(" TYPE=hidden>)fullname} {(" SIZE=35>)} ifelse
     (<BR>)

     {(<BR>)} () () promptinfo
  } ifelse

  (<INPUT TYPE=submit VALUE="Submit changes">
  <INPUT TYPE="reset" VALUE="Clear fields">
  </FORM>
  <HR>)

}{

  % bio is not for me, don't use a form to display the info

  privacy mayseefname ! or  {(No information available.)} {
  (<STRONG>Full Name</STRONG>: ) fullname ( <P>\n)
  laston    { (<STRONG>Last On</STRONG>: ) laston ztime      (<P>\n) }if
  /useplan constant  {(<P><PRE>) plan expand (</PRE>\n)} {
  regdate   { (<STRONG>Registered</STRONG>: ) regdate cvt ztime  (<P>\n) }if
  {(<P>)} () showinfo
  } ifelse  % end test for plan
  } ifelse  % end test for privacy
  status {(<P>Account Status: )status 1 eq {(U)}{(I)}ifelse(nvalidated)}if
} ifelse    % end test edit_mode

% print page footer

global_footer
(</BODY></HTML>
)

% Backtalk Papaya Interface -- (c) 2002, Jan Wolter, Steve Weiss
%
% read script
%
% Read all or part of an item.
%
% Query Parameters:
%    conf=	current conference
%    csel=	selector for future conferences to read
%    item=	item to read now, if zero start with first item
%    rsel=	response selector - (all) (new) (since) or numeric range
%    mesg=      message to display instead of item.
%    noskip=	if true, display even items with no selected responses.
%    since=	if rsel is (since) this gives date.
%    showforgotten= show all, unforgotten, or forgotten items.
%    slipped=   set to old resp text if displaying slipped in messages.
%    sliptype=  set to old resp type if displaying slipped in messages.

flavor(config)+ include
/extern_bio constant {(lib/biolink) include} if

/shyfile constant {flavor(unreg)+ include} if

/rstart defined {
  /rsel rstart cvs <<[-,]>> grep {rstart} {rstart cvs (-$)+} ifelse def
} if

% reformat a date
/mungdate {
 ctime /dt xdef
 dt 0 3 substr(, )dt 4 6 substr(, )dt 20 4 substr( \()dt 11 5 substr(\))
} def

% construct byline macro used in more than one place
/byline {
 (Date: )date mungdate(<BR>)
 editdate erased ! and {
   (Edited: )editdate mungdate(<BR>\n)} if
 mayseealias {
   (From: )authorname quote( \(<A HREF=")
  /extern_bio constant { authorid extern_view_bio }
    { (bio?login=)authorid cgiquote } ifelse (">)
   authorid expand (</A>\)\n)
 } {
   (From: )authorid expand
 } ifelse
} def

/rcp {
  mayhide {
      ( <A HREF="hide?conf=)conf(&csel=)csel(&item=)item(&resp=)resp
      since{(&since=)since}if noskip {(&noskip=)noskip}if
      showforgotten{(&showforgotten=)showforgotten}if
      (&rsel=)rsel(&fn=)
      hidden {(S">unhide)} {(H" target="_self">hide)} ifelse
      (</A>\n)
  } if
  mayedit {
      ( <A HREF="edit?conf=)conf(&csel=)csel(&item=)item
      (&resp=)resp(&lastresp=)maxresp
      since{(&since=)since}if noskip{(&noskip=)noskip}if
      showforgotten{(&showforgotten=)showforgotten}if
      (&rsel=)rsel(">edit</A>\n)
  } if
  mayerase {
      ( <A HREF="hide?conf=)conf(&csel=)csel(&item=)item(&resp=)resp
      since{(&since=)since}if noskip {(&noskip=)noskip}if
      showforgotten{(&showforgotten=)showforgotten}if
      (&rsel=)rsel(&fn=E">delete</A>\n)
  } if
} def

% <what> show_text <text>...
/show_text {
  /what xdef
  /cnt inc
  /ignore 0 def
  twitlist {authorid twitlist (,) inlist {/ignore 1 def} if } if
  hidden erased ignore or or {
    erased {
      (<I>)what( is scribbled.</I>)
    } {(<I>\()what( is <A HREF="view?conf=)conf(&csel=)csel(&item=)item
        (&resp=)resp(">)
        ignore {(ignored)}{(hidden)}ifelse
        (</A>\)</I>)
    } ifelse
    resp 1 + item mark_unseen pop
    (<P>\n)
  } {
    /shyfile constant {form_text} {1 read_text} ifelse
    attachments {
      (<P><FONT SIZE=-1><EM><U>Attachments</U>:</EM>\n)
      {
        attachments (,) clip /hand xdef /attachments xstore
        (<BR>&nbsp;&nbsp;)
        hand get_attach dup 0 gt {
          1 eq { (<EM>Deleted</EM>) }
               { (<EM>Permission Denied</EM>) } ifelse
        } {
          pop
          /url xdef /desc xdef /size xdef /type xdef
          (<A HREF=")url(">)desc quote(</A> \() type mimename( - )
          size 2048 lt { size( bytes) }
          { size 2097152 lt {size 1024 / (K)}
            {size 1048576 / (M)} ifelse } ifelse
          (\))
        } ifelse

        attachments ! {break} if
      } loop
      (</FONT>\n)
    } if
  } ifelse
} def

% ===== Filter Macros =====

flavor(links)+ include

% ===== Get to work =====

% if item is 0, skip to first item
item ! {
  open_conf {(Cannot access )Conference( ')conf(') halt} if
  (1-$) next_item {(No such item) halt} if
  /item xstore pop pop
} if

% get settings = first set defaults, then load .backtalk
/rtype (text/plain) def /twitlist () def
/loaduser defined {
  () [/rtype /timezone /twitlist] loaduser pop
} {
  (*.backtalk) [/rtype /timezone /twitlist] loadvar pop
} ifelse

% page header
(<HTML><HEAD> 
<BASE HREF=")backtalkurl(/)flavor(read">
<TITLE>)bbsname(: Read )/conftitle( )item(</TITLE>
<STYLE TYPE="text/css">
<!--
TEXTAREA {font-family: monospace;}
//-->
</STYLE>\n)
/thisheader
(</HEAD>
)

% open conference and load lots of button definitions
flavor(openconf)+ stopped {`Conference cap( )'conf( does not exist.\n) halt} if
% If a password is required, ask for it
secret 2 eq /dunno defined ! and {
  [/conf /item /csel /rsel /tmprsel /noskip /since /showforgotten
   /slipped] flavor(confpass)+ jump
} if

/thisheader `(I) flavor(meta)+ include' def

global_header

% If item is readable, load in various data
mayread { rsel item this_item ! {/nrs xstore} if } if

% Generate a login URL
id ! {
  /login_url `
  sessions {
    anon_url(public/login?bounce=http://)HTTP_HOST anon_url
    flavor(read%3Fconf%3D)conf cgiquote(%26csel%3D)csel cgiquote
    (%26item%3D)item(%26rsel%3D)rsel cgiquote(%26showforgotten%3D)showforgotten
    noskip {(%26noskip%3D)noskip} if
    since {(%26since%3D)since cvi} if
  } {
    pw_url flavor(read?conf=)conf cgiquote(&csel=)csel cgiquote(&item=)item
     (&rsel=)rsel cgiquote(&showforgotten=)showforgotten
     noskip {(&noskip=)noskip} if
     since {(&since=)since cvi} if
  } ifelse' def
} if

% Generate the control panel

% If we are putting up an RSS icon, start a table
use_rss_icon expose_rss_conf and {
  (<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH=100%><TR><TD>)
} if

[

% figure out if there are next or previous items
/nitem 0 def
/pitem 0 def

`item 1 + cvs (-$)' next_item ! {/nitem xdef pop pop} if
item 1 gt {
  `item 1 - cvs (-1)' next_item ! {/pitem xdef pop pop} if
} if

% Show previous and next conference buttons
pitem {
  (<A HREF="read?conf=)conf(&csel=)csel
  showforgotten {(&showforgotten=)showforgotten} if
  noskip {(&noskip=)noskip} if
  since {(&since=)since cvi} if
  (&item=)pitem(&rsel=)rsel("><IMG BORDER=0 SRC=")imghost
  (/)flavor(previtem.gif"></A>)
} {
  greybutton {(<IMG BORDER=0 SRC=")imghost(/)flavor(noprevitem.gif">)} if
} ifelse

nitem {
  (<A HREF="read?conf=)conf(&csel=)csel
  showforgotten {(&showforgotten=)showforgotten} if
  noskip {(&noskip=)noskip} if
  since {(&since=)since cvi} if
  (&item=)nitem(&rsel=)rsel("><IMG BORDER=0 SRC=")imghost
  (/)flavor(nextitem.gif"></A>)
} {
  greybutton {(<IMG BORDER=0 SRC=")imghost(/)flavor(nonextitem.gif">)} if
} ifelse

% find next and previous conferences
flavor(nextprev)+ include

% do the previous conference button
prev {
  (<A HREF="confhome?)prev(">)
  (<IMG BORDER=0 SRC=")imghost(/)flavor(prevconf.gif"></A>)
} {
  greybutton {(<IMG BORDER=0 SRC=")imghost(/)flavor(noprevconf.gif">)} if
} ifelse

% do the next conference button
next {
  (<A HREF="confhome?)next(&nextnew=1">)
  (<IMG BORDER=0 SRC=")imghost(/)flavor(nextconf.gif"></A>)
} {
  greybutton {(<IMG BORDER=0 SRC=")imghost(/)flavor(nonextconf.gif">)} if
} ifelse

] dup /navbuttons xdef

% do the enter button
maxitem 0 gt amfw or maypost and {
  (<A HREF="enter?conf=)conf cgiquote(&csel=)csel(&goto=read">)
  (<IMG BORDER=0 SRC=")imghost(/)flavor(enter.gif"></A>)
} { 
  greybutton {(<IMG BORDER=0 SRC=")imghost(/)flavor(noenter.gif">)} if
} ifelse

[
% do the remember/forget button
mayread id and {
  (<A HREF="forget?conf=)conf(&csel=)csel(&item=)item(&rsel=)rsel
  noskip {(&noskip=)noskip} if
  since {(&since=)since cvi} if
  forgotten {
    (&op=remember"><IMG BORDER=0 SRC=")imghost(/)flavor(remember.gif"></A>)
  } {
    (&op=forget"><IMG BORDER=0 SRC=")imghost(/)flavor(forget.gif"></A>)
  } ifelse
} {
  greybutton {(<IMG BORDER=0 SRC=")imghost(/)flavor(noforget.gif">)} if
} ifelse

% do the help button
(<A HREF="help?page=read">)
(<IMG BORDER=0 SRC=")imghost(/)flavor(help.gif"></A>)

% do login and register buttons
id ! {
  (<A HREF=")register_url(">)
  (<IMG BORDER=0 SRC=")imghost(/)flavor(register.gif"></A>)

  (<A HREF=")login_url("><IMG BORDER=0 SRC=")imghost(/)flavor(login.gif"></A>)
} if

] dup /forgetbutton xdef

% Put up RSS icon
use_rss_icon expose_rss_item and {
  (</TD>\n<TD ALIGN=right><A TITLE="RSS feed for )Responses( to )
  bbsname( )conftitle( )Item cap( #)item(" HREF=")
  anon_url(cinnamon?conf=)conf(&item=)item("><IMG SRC=")rss_icon
  (" BORDER=0></A></TD></TR></TABLE>\n)
} if

(<HR>\n)
mayread ! /nrs defined ! or {
  `(No )Item( )'item`( in )conf( )Conference(.\n)'
  flavor(footer)+ chain
} if

/mesg defined {
  mesg
  flavor(footer)+ chain
} if

% generate the text body

nrs read_item {`(Cannot access )Item(.\n)' stop} if

/nrs xstore

/slipped defined ! { /slipped () def } if

slipped {
  `(<CENTER><TABLE BORDER=3 WIDTH=65%><TR><TD BGCOLOR=FF0000>
  <FONT COLOR=FFFFFF><STRONG>
  The )Response( below was posted since you last read this )Item(.<P>
  Your new )Response( has NOT yet been posted.<P>
  If you still want to post your )Response(, you may edit it and hit the
  post button again.</STRONG></FONT></TD></TR></TABLE></CENTER><P>\n)'
  /rtype sliptype store
} if

`(<H2>)Item cap( )'item(: )title expand
linked {( [linked])} if
forgotten {( [forgotten])} if
frozen {( [frozen])} if
retired {( [retired])} if
mayretitle {
  ( <A HREF="retitleform?conf=)conf(&csel=)csel(&item=)item(&resp=)resp
  since{(&since=)since}if noskip {(&noskip=)noskip}if
  showforgotten{(&showforgotten=)showforgotten}if
  (&rsel=)rsel(">retitle</A>\n)
} if
rcp
(<BR>
)byline(</H2>
)

/cnt 0 def
resp {
  (<P><B>)nrs maxresp count_sel ( new of )
} {
  editdate erased ! and {
    (<BR><EM>\(edited )editdate ztime(\)</EM><P>\n)} if
  (<P>)
  (Item text) show_text
 (<P><B>)
} ifelse
maxresp `( )Responses( total.
</B><P>)'

{ nrs next_resp {break} if
  read_resp {pop break} if
  /nrs xstore

  (<HR><H3>)Response cap( )resp(: )rcp(<BR>\n)
  byline
  parentresp {(Re: )parentresp(\n)} if
  (</H3>\n)

  (Response) show_text

} loop

maypost
{
  id ! {
    % Figure out a default alias for anonymous posters
    anonposter /usrname pushuser ! { /alias xstore } if
    alias ! {/alias (Anonymous User) store } if
  } if

  /allowhtml dflt_html def (*settings) /allowhtml loadvar pop

  (
  <HR>
  <FORM METHOD=POST TARGET="_self" ACTION=response>
  <TABLE BORDER=0>
  <TR><TD>Use Pseudonym:
  <INPUT NAME=pseudo TYPE=text VALUE=")alias quote("></TD>\n)
  allowhtml {(
  <TD ALIGN=right><SELECT NAME=texttype>
  <OPTION VALUE="text/plain">Plain Text
  <OPTION VALUE="text/html")rtype (text/html) eq {( SELECTED)}if (>Pure HTML
  <OPTION VALUE="text/html-blanks")rtype (text/html-blanks) eq {( SELECTED)} if
  (>lazy HTML
  </SELECT></TD>
  )} {(<INPUT TYPE=HIDDEN NAME=texttype VALUE="text/plain">
  )}ifelse
  (</TR>\n<TR><TD COLSPAN=2>Enter your )Response( in the area below:<BR>
  <INPUT NAME=conf TYPE=hidden VALUE=)conf(>
  <INPUT NAME=csel TYPE=hidden VALUE=)csel(>
  <INPUT NAME=item TYPE=hidden VALUE=)item(>
  <INPUT NAME=rsel TYPE=hidden VALUE=)rsel(>
  <INPUT NAME=prevmax TYPE=hidden VALUE=)maxresp(>\n)
  noskip {(<INPUT NAME=noskip TYPE=hidden VALUE=)noskip(>\n)} if
  since {(<INPUT NAME=since TYPE=hidden VALUE=)since(>\n)} if
  showforgotten {(<INPUT NAME=showforgotten TYPE=hidden VALUE=)showforgotten(>\n)} if
  (<TEXTAREA NAME="text" ROWS=12 COLS=72 WRAP=HARD>)slipped(</TEXTAREA><BR>
  <INPUT TYPE=submit VALUE="Submit )Response(">
  </TD></TR></TABLE>
  </FORM>
  )
} {
  (<HR><P><I>Response not possible - )
  id {
    frozen { `Item cap( is frozen.)' }
	   { `(You are not authorized to post to this )Conference(.)' } ifelse
  } {
    (You must <A HREF=")login_url(">login</A> before posting.)
  } ifelse
  (</I><P>\n)
} ifelse

(<HR>
<FORM METHOD=POST ACTION="read">
<INPUT NAME=conf TYPE=hidden VALUE=)conf(>
<INPUT NAME=csel TYPE=hidden VALUE=)csel(>
<INPUT NAME=item TYPE=hidden VALUE=)item(>
Redisplay starting from response number:
<INPUT NAME=rstart TYPE=text VALUE="0" SIZE=8>
<INPUT TYPE=submit VALUE="Redisplay">
</FORM>
)
navbuttons

% do the preserve button
id maxread maxresp lt and {
  (<A HREF="preserve?conf=)conf cgiquote(&csel=)csel(&item=)item(&rsel=)rsel
    (&resp=)maxread 1 +(">)
  (<IMG BORDER=0 SRC=")imghost(/)flavor(preserve.gif"></A>)
} {
  greybutton {(<IMG BORDER=0 SRC=")imghost(/)flavor(nopreserve.gif">)} if
} ifelse

forgetbutton

flavor(footer)+ chain

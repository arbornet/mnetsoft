% Backtalk Papaya Interface -- (c) 2002, Jan Wolter, Steve Weiss
%
% response script
%
% A script to post a response to an item.  This is the form handler for the
% response form on the bottom of the screen generated by "read.mktext.bt"
%
% Query Parameters:
%    text=	text of response to post
%    texttype=  type of text ("text/html" or "text/plain")
%    prevmax=   number of last response shown to user before posting
%    alias=     name to post response under
%    hidden=    true if user wanted response posted hidden
%    goto=      read script to goto after posting response
%
%    conf=      current conference
%    csel=      selector for future conferences to read
%    item=      item to read now
%    rsel=      response selector - (all) (new) (since) or numeric range
%    noskip=    if true, display even items with no selected responses.
%    since=     if rsel is (since) this gives date.
%    showforgotten= show all, unforgotten, or forgotten items.

flavor(config)+ include
(lib/postlog) include

conf () eq {
  (No conference name parameter passed to response script\n) halt
} if

% this might become a user-settable variable in the future.
/noslip 1 defconstant

flavor(openconf)+ stopped {( Conference )conf( does not exist.\n) halt} if
pop

mayread ! {(The )conf( conference is not readable to you.) stop } if

% conf, item, maxresp, and rsel should be set in query
rsel item this_item {
  (Due to an internal error, your message has not been posted.<br>\n\(conf = )
  conf (, item = )item (, rsel = )rsel(\)\n)
  stop
} if
pop

mayresp ! {
  (Because of improper permissions, your message has not been posted.<BR>)
  id ! {
    ((You have not been authenticated.))
  } {
    frozen {`(\(This )Item( is frozen.\))'}
           {`(\(This )Conference( is read-only.\))'} ifelse
  } ifelse
  stop
} if

text () eq {
  (Your message was empty, so there was nothing to post. Go back )
  (and fill in the response area before pressing "post") stop
} if

pseudo {pseudo /alias xstore} if

/allowhtml dflt_html def (*settings) [/allowhtml /allowgraphics] loadvar pop
allowhtml ! /texttype defined ! or {
   /texttype (text/plain) def
} if

%Netscape's auto text wrapping mades this unnecessary - but Internet Explorer
%got it wrong, so here it is again
texttype (text/plain) eq
{
   text 79 wrap /text xstore
} if

texttype (text/html-blanks) eq
{
   text (\r) () 0 replace (\n\n) (\n<P>\n) 0 replace /text xstore
   /texttype (text/html) store
} if

% If we are trapping slipped responses, set the expected response number
noslip {
  /expect_resp prevmax cvi 1 + store
} if

% finished checking for errors, now we'll actually try to write the message

post_resp /resp xstore

resp 0 le {
  resp {
    % a response has slipped in - jump back to read page
    /slipped text def
    /sliptype texttype def
  } {
    (Your post failed due to an internal error.\n)
    stop
  } ifelse
} if

% write out particpation file -- No further updates in this transaction
% close_conf   % commenting this out because we don't need it
1 /blindfold xstore

% show my response and any slipped ones.
prevmax cvi 1 + /rstart xdef
flavor(read)+ jump

% Backtalk Admin Interface -- (c) 1996, Jan Wolter, Steve Weiss
%
% confopt script
%
% This script allows the user to set conference options, including
% the color scheme, the button designs and the login screens.
%
% Query Parameters:
%    conf=	    name of conference we are configuring
%    msg=	    text message to display near top of page.
%    newallow=      if defined, 0=don't allowhtml
%				1=allowhtml/don't allowgraphics,
%				2=allowhtml/allowgraphics
%    admhome=   URL of administrative menu

flavor(config.bt)+ include

amadm ! {
  (You must be a conference administrator to access this page\n)
  sessions {
    /msg xdef
    /bounce `serverurl anon_url (admin/begin)' def
    (public/login) chain
  } {
    stop
  } ifelse
} if

/admhome defined ! {/admhome `SCRIPT_NAME(/)flavor(begin)' def} if

% page header
(<HTML><HEAD>
<TITLE>Set Options for Conference )conf(</TITLE></HEAD>
<BODY BGCOLOR=white>
)

% open the conference
open_conf { (No such )Conference( \()conf(\) </BODY></HTML>\n) stop } if

% load various settings
/login () def
/allowhtml dflt_html def
/new_isel (1,$) def
/new_since 0 def
/bgcolor () def
/textcolor (000000) def
/linkcolor (0000EE) def
/vlinkcolor (551A8B) def
/alinkcolor (FF0000) def
/regbutton undef
/offbutton undef
/admbutton undef
(*settings) [
  /login /allowhtml /allowgraphics /new_isel /new_since /bgcolor /textcolor
  /linkcolor /vlinkcolor /alinkcolor /regbutton /offbutton /admbutton
  ] loadvar pop

/bgc bgcolor {bgcolor}{(FFFFFF)} ifelse def

% change the HTML setting
/newallow defined {
  newallow cvi 0 eq {
    /allowhtml 0 def
    /allowgraphics 0 def
  } {
    /allowhtml 1 def
    /allowgraphics newallow cvi 2 eq def
  } ifelse
  (*settings) [/allowhtml /allowgraphics] savevar
} if

% "state" is a standard part of links to other pages
/state [(conf=)conf(&admhome=)admhome] def

(<H1>Set Options for )conftitle( conference</H1>
Return to <A HREF=)admhome(>admin menu</A>.
<P>
These settings will affect all readers of the conference and may only be
manipulated by the conference fairwitnesses or the conference administrator.
Not all options are used by all interfaces.
)

% print any message returned from helper scripts
/msg defined {
 msg(<HR>\n)
} if

(<H2>HTML Postings</H2>

Currently users are )
allowhtml {
  (allowed to post HTML responses and items with)
  allowgraphics !{(out)} if
  ( images in this conference.\n)
} {
  (not allowed to post HTML responses and items in this conference.\n)
} ifelse
(This may be changed below.
<FORM ACTION=confopt>
<INPUT TYPE=hidden NAME=conf VALUE=)conf(>
<INPUT TYPE=hidden NAME=admhome VALUE=)admhome(>
<SELECT NAME=newallow>
<OPTION VALUE=0) allowhtml ! {( SELECTED)} if
(>No HTML postings allowed
<OPTION VALUE=1) allowhtml allowgraphics ! and {( SELECTED)} if
(>HTML postings without embedded images allowed
<OPTION VALUE=2) allowhtml allowgraphics and {( SELECTED)} if
(>HTML postings with embedded images allowed
</SELECT>
<INPUT TYPE=submit VALUE="Change">
</FORM>

<H2>Initial New Items</H2>

By default, when a user joins a conference for the first time, only
the first and last items will be "new".  All the other items are "unseen".
If a user does a "read new", they see only the two "new" items.  Other
items won't become "new" until at least one new response is made to them.
This is done to ensure that people don't get innundated with ancient,
inactive items when they join large conferences for the first time.
<P>
You can change which items will be "new" for first-time users.  The
items that will start out "new" for first-time users of the )conf(
conference are:
<BLOCKQUOTE>
Initial New Items: <STRONG>)
new_isel {
  new_isel (1-$) eq {
    (ALL)
  }{
    new_isel ($) (LAST) 0 replace
    new_since {( and )} if
  } ifelse
} {
  new_since ! {(NONE)} if
} ifelse
dup (ALL) ne new_since and {
  (any items which have had new responses in the last )new_since( day)
  new_since 1 ne {(s)}if (.)
} if
(\n</STRONG></BLOCKQUOTE>
<A HREF=setinew?)state(>Change Initial new items</A>.
)

% load the ascii login screen text
/asciilogin (*login) read def

(<H2>Login Screens</H2>
When a user enters a conference, he first sees the ``conference home'' page.
A conference login screen is shown at the top of that page.  Normally this
would include things like:
<UL>
<LI>The name of the conference.
<LI>The names of the fairwitnesses.
<LI>A description of the conference.
<LI>Maybe some small logo.
</UL>
There are two versions of this screen.  Backtalk prefers to use the HTML
version, which is currently )
login { (set to: <HR>)login(<BR CLEAR=BOTH><HR>)}
      { (not defined.<P>)} ifelse
(
<A HREF=editscreen?)state(&target=login.html&goto=confopt>
Edit this HTML version of the login screen</A>.
<P>
If no HTML version is defined, Backtalk will use the ASCII version.
This is also used by Picospan and Yapp.  It is currently )
asciilogin {(set to:\n<HR><PRE>)asciilogin expand(</PRE><HR>)}
           {(not defined.<P>)} ifelse
(
<A HREF=editscreen?)state(&target=login&goto=confopt>
Edit this ASCII version of the login screen</A>.

<H2>Colors</H2>

The following settings allow you to select the colors to use be used by the
pistachio interface in the )conf( conference.  Change these with caution -
color combinations that look great on your computer may be completely
illegible on other people's computers.
<P>
These colors are used heavily by the pistachio interface, slightly by abalone
(only as a background for the login screen), and not at all by vanilla.
<P>
Note that if you haven't explicitly set a color, or if you have set them
to ``default'' then then the standard Netscape default values will be used
on this page.  These may or may not be <EM>your</EM> default colors.
since these can be reset in most browsers.
<P>
<CENTER>
<TABLE BORDER=1>
<TR><TD>Background Color:</TD>
<TD ALIGN=center BGCOLOR=)bgc(>)bgcolor{(&nbsp;)}{((default))}ifelse (</TD>
<TD><A HREF=color?)state(&what=bgcolor&old=)bgcolor(>Change</A></TD></TR>
<TR><TD>Text Color:</TD>
<TD ALIGN=center BGCOLOR=)bgc(><FONT COLOR=)textcolor(>some text</FONT></TD>
<TD><A HREF=color?)state(&what=textcolor&old=)textcolor(>Change</A></TD></TR>
<TR><TD>Unused Link Color:</TD>
<TD ALIGN=center BGCOLOR=)bgc
(><FONT COLOR=)linkcolor(><U>a link</U></FONT></TD>
<TD><A HREF=color?)state(&what=linkcolor&old=)linkcolor(>Change</A></TD></TR>
<TR><TD>Used Link Color:</TD>
<TD ALIGN=center BGCOLOR=)bgc
(><FONT COLOR=)vlinkcolor(><U>a link</U></FONT></TD>
<TD><A HREF=color?)state(&what=vlinkcolor&old=)vlinkcolor(>Change</A></TD></TR>
<TR><TD>Clicked Link Color:</TD>
<TD ALIGN=center BGCOLOR=)bgc
(><FONT COLOR=)alinkcolor(><U>a link</U></FONT></TD>
<TD><A HREF=color?)state(&what=alinkcolor&old=)alinkcolor(>Change</A></TD></TR>
</TABLE>
</CENTER>
<P>
It is also possible to change the button styles used in pistachio.  Use )
helper (pistachio) eq {
  (<A HREF=)SCRIPT_NAME(/pistachio/confopt?conf=)conf
  (>Pistachio's conference configuration page</A>)
} {
  (Pistachio's conference configuration page)
} ifelse
( to select those.
</BODY></HTML>
)

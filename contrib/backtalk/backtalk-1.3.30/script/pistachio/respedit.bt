% Backtalk Pistachio Interface -- (c) 1996-2003, Jan Wolter, Steve Weiss
%
% respedit script
%
% A script to edit a response in an item.  This is the form handler for the
% response form generated by edit.bt
%
% Query Parameters:
%    text=	text of response to post
%    texttype=  type of text ("text/html" or "text/plain")
%    pseudo=     name to post response under
%    post.x=    defined if the "post" button was clicked.
%    preview.x= defined if the "preview" button was clicked.
%    resp=      number of response to edit
%    goto=      page to display next
%
%    conf=      current conference
%    csel=      selector for future conferences to read
%    item=      item to read now
%    isel=      selector for items to read after this
%    rsel=      response selector - (all) (new) (since) or numeric range
%    noskip=    if true, display even items with no selected responses.
%    since=     if rsel is (since) this gives date.
%    showforgotten= show all, unforgotten, or forgotten items.
%
% If attachments are enabled:
%    nattach         Number of existing attachments in form
%    hand1,hand2,... Handles for attachment i
%    del1,del2,...   If true, delete this attachment
%    desc1,desc2,... New descriptions for attachments
%    type1,type2,... New types for attachments
%    baa_file        New attachment content 
%    type            New attachment type

flavor(config)+ include

% Function to check return codes from edit_resp or edit_attach
/errcheck {
  dup 0 gt {
    dup 2 eq {
      pop `(No such )Response( or )Item( is frozen.\n)'
    } {
      3 eq {
	`(Permission to edit )Response( denied.\n)'
      } {
	(Attachment not found.\n)
      } ifelse
    } ifelse
    stop
  } {
    pop
  } ifelse
} def


% if previewing run another script
/preview.x defined {
  /thisresp resp def
  flavor(resp_preview)+ jump
} if

flavor(openconf)+ stopped {( )Conference cap( )conf( does not exist.\n) halt} if
pop

mayread ! {(The )conf( )Conference( is not readable to you.) stop } if

pseudo {pseudo /alias xstore} if

/allowhtml dflt_html def (*settings) [/allowhtml /allowgraphics] loadvar pop
allowhtml ! /texttype defined ! or {
   /texttype (text/plain) def
} if

%Netscape's auto text wrapping mades this unnecessary - but Internet Explorer
%got it wrong, so here it is again
texttype (text/plain) eq
{
   text 79 wrap /text xstore
} if

texttype (text/html-blanks) eq
{
   text (\r) () 0 replace (\n\n) (\n<P>\n) 0 replace /text xstore
   /texttype (text/html) store
} if

edit_resp errcheck

canattach {
  /delhand () def
  /nattach defined {
    1 1 nattach cvi {
      /i xdef
      (hand)i cvs + cvn exec /handi xdef
      (del)i cvs + cvn defined {
        delhand {
	  delhand () reattach errcheck
	} if
	/delhand handi def
      } {
	handi
	  (desc)i cvs + cvn exec
	  (type)i cvs + cvn exec
	  edit_attach dup { 1 eq {(Attachment )handi( not found)}
				 {(Permission to edit )handi( Denied)} ifelse
				 stop } { pop } ifelse
      } ifelse
    } for
  } if

  baa_file {
    baa_file desc resp make_attach /baa_file xdef
  } if
  delhand baa_file reattach errcheck

} if

% show my response and successors
resp cvs (-$) + /tmprsel xdef
goto jump

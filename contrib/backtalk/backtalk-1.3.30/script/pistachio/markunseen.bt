% Backtalk Pistachio Interface -- (c) 1996, Jan Wolter, Steve Weiss
%
% markunseen script
%
% This script marks a response unseen.  It is a handler for the "unseen"
% button next to the responses on the read page (generated by "read.mktext")
%
% Query Paramters:
%    conf=      conference to unsee a response in
%    item=      item number to unsee a response in
%    resp=      response number to unsee.
%
%    csel=      current list of conference (not used, just passed through)
%    isel=      current item selector (not used, just passed through)
%    rsel=      current response selector (not used, just passed through)
%    since=     date we are reading since (not used, just passed through)
%    noskip=    are we reading only new items? (not used, just passed through)

% decide if we are running with frames
/frames browser 3 ge def (*.backtalk) /frames loadvar pop

flavor(config)+ include

% page header (mostly only needed if we have no frames)
(<HTML>\n)
frames ! {
  (<HEAD><TITLE>)bbsname ( - )/conftitle
  `( )Conference cap( - )Item cap ( )item(</TITLE>\n)/metatags(</HEAD>\n)'
} if

% open the conference
flavor(openconf)+ stopped {
  (Backtalk internal error: No such )Conference( \()conf(\)\n) halt} if
secret 2 eq /dunno defined ! and {
  [/conf /item /resp /csel /isel /rsel /since /noskip]
  flavor(confpass)+ jump
} if

% Mark the response unseen
resp item mark_unseen {
  (Backtalk error: could not find )Response( )resp( of )Item( )item( in the )
  conf( )Conference(.\n) stop
} if

% if we don't have frames, bring up a control panel
frames ! {
  global_header
  /butsel 22 defconstant flavor(buttondef)+ include
  rsel item this_item ! dup {exch /nrs xstore } if
  flavor(read.mkpanel)+ call
  (\n<HR>\n)
} if

% tell the user about it
Responses cap( )resp(-$ of )Item( )item
( will still be new next time you enter the )
conftitle( )Conference(.)
global_footer
(</BODY></HTML>
)

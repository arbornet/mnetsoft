% Backtalk Pistachio Interface -- (c) 1996-2003, Jan Wolter, Steve Weiss
%
% response script
%
% A script to post a response to an item.  This is the form handler for the
% response form on the bottom of the screen generated by "read.mktext.bt"
%
% Query Parameters:
%    text=	text of response to post
%    texttype=  type of text ("text/html" or "text/plain")
%    prevmax=   number of last response shown to user before posting
%    pseudo=     name to post response under
%    hidden=    true if user wanted response posted hidden
%    goto=      read script to goto after posting response
%    post.x=    defined if the "post" button was clicked.
%    preview.x= defined if the "preview" button was clicked.
%
%    conf=      current conference
%    csel=      selector for future conferences to read
%    item=      item to read now
%    isel=      selector for items to read after this
%    rsel=      response selector - (all) (new) (since) or numeric range
%    noskip=    if true, display even items with no selected responses.
%    since=     if rsel is (since) this gives date.
%    showforgotten= show all, unforgotten, or forgotten items.

flavor(config)+ include
(lib/postlog) include

conf () eq {
  (No conference name parameter passed to response script\n) halt
} if

% if previewing run another script
/preview.x defined {
  prevmax cvi 1 + dup /thisresp xdef /lastresp xdef
  flavor(resp_preview)+ jump
} if

% this might become a user-settable variable in the future.
/noslip 1 defconstant

% If requested an attachment, go get it
canattach { /atch defined { atch (1) eq {
  flavor(respattach)+ jump
} if } if } if

flavor(openconf)+ stopped {( Conference )conf( does not exist.\n) halt} if
pop

mayread ! {(The )conf( conference is not readable to you.) stop } if

% If have an attachment, index it
canattach { /atch defined { baa_file {
  baa_file desc prevmax cvi 1 + make_attach /baa_file xdef
  /attachments `attachments {attachments (,)} if baa_file' def
} if } if } if

% conf, item, maxresp, and rsel should be set in query
rsel item this_item {
  (Due to an internal error, your message has not been posted.<br>\n\(conf = )
  conf (, item = )item (, rsel = )rsel(\)\n)
  stop
} if
pop

mayresp ! {
  (Because of improper permissions, your message has not been posted.<BR>)
  id ! {
    ((You have not been authenticated.))
  } {
    frozen {`(\(This )Item( is frozen.\))'}
           {`(\(This )Conference( is read-only.\))'} ifelse
  } ifelse
  stop
} if

text () eq {
  (Your message was empty, so there was nothing to post. Go back )
  (and fill in the response area before pressing "post") stop
} if

pseudo {pseudo /alias xstore} if

/allowhtml dflt_html def (*settings) [/allowhtml /allowgraphics /rfav]
  loadvar pop
allowhtml ! /texttype defined ! or {
   /texttype (text/plain) def
} if

%Netscape's auto text wrapping mades this unnecessary - but Internet Explorer
%got it wrong, so here it is again
texttype (text/plain) eq
{
   text 79 wrap /text xstore
} if

texttype (text/html-blanks) eq
{
   text (\r) () 0 replace (\n\n) (\n<P>\n) 0 replace /text xstore
   /texttype (text/html) store
} if

% If we are trapping slipped responses, set the expected response number
noslip {
  /expect_resp prevmax cvi 1 + store
} if

/erased 0 def

% finished checking for errors, now we'll actually try to write the message

post_resp /resp xstore

resp 0 le {
  resp {
    % a response has slipped in - jump back to read page
    /slipped text def
  } {
    (Your post failed due to an internal error.\n)
    stop
  } ifelse
} if

% show my response and any slipped ones.
prevmax cvi 1 + cvs (-$) + /tmprsel xdef

/http_location `backtalkurl(/)goto(?seeno=1&conf=)conf(&csel=)csel
  (&item=)item(&isel=)isel(&rsel=)rsel(&tmprsel=)tmprsel
  /nextnew defined{(&nextnew=)nextnew}if
  /slipped defined {
    (&slipped=)slipped cgiquote
    (&sliptype=)texttype
    (&slipalias=)alias cgiquote
    hidden {(&sliphid=1)} if
  }if
  since {(&since=)since}if
  showforgotten {(&showforgotten=)showforgotten}if '
  store

Response cap( Posted.  If you see this message, you need a smarter browser.\n)

% Backtalk Pistachio Interface -- (c) 1996, Jan Wolter, Steve Weiss
%
% ulist script
%
% Form for editing the lists of users and groups that may access a conference.
% it is it's own handler
%
% Query Parameters:
%   conf=       which conference (for ulist and login only)
%   csel=       current conference selector (not used, just passed along)
%   goto=	if defined, script to execute when done
%   go=         flag equal to one if we have new values for ulist and glist
%   glist=	groups for glist file, in comma-separated format
%   ulist=      users for ulist file, in newline-separated format


flavor(config)+ include

/glist defined ! {/glist () def} if

% header
(<HTML><HEAD>
<STYLE TYPE="text/css">
<!--
TEXTAREA {font-family: monospace;}
//-->
</STYLE>
<TITLE>Edit User List</TITLE>
)/metatags(</HEAD>\n)

conf {
  flavor(openconf)+ stopped {
     (Backtalk internal error: No such )Conference( \()conf(\)\n) stop} if
  secret 2 eq /dunno defined ! and {
    [/conf /target /csel /goto /text] flavor(confpass)+ jump
  } if
} {
  (No conference specified) stop
} ifelse

global_header

/go defined {
  % do update

  % check if we have write access
  (*ulist) writable ! {(Cannot write to ulist.) stop} if
  (*glist) writable ! {(Cannot write to glist.) stop} if

  % fix up and save ulist value
  `ulist <<[\r\n \t,;:]+>>m 0 {(\n)} rgrep dup {(\n)} if'
  (*ulist) write

  % fix up and save glist value
  glist (,) (\n) 0 replace (\n) +
  (*glist) write

  % if we have a "goto" defined, jump there
  /goto defined {
    clear
    goto jump
  } if
} if

/butsel 4 defconstant flavor(buttondef)+ include

(<H1>Edit User List</H1>\n)

amfw ! {`(Only )Fairwitnesses( can edit the user list\n)' stop} if 
userlist ! {
  `(<STRONG>
  NOTE: Access to this )Conference( is not restricted based on the user list.
  This user list will be ignored unless and until the )Conference( is closed
  by a conference administrator.</STRONG><P>\n)'
} if

(<FORM METHOD=POST ACTION=ulist>\n)
grouplist {
(All users in the groups checked below may )
fishbowl{(post to)} {(access)} ifelse
( the <EM>)conf(</EM> )Conference
(.
<P>
<STRONG>Check all that apply</STRONG>:
<BR>
<TABLE WIDTH=100%>\n)
/ncol 4 defconstant
/col 0 def
/glist (*glist) read def
[groups] {
  /g xdef
  col 0 eq {(<TR>)} if
  /col inc
  (<TD><INPUT TYPE=checkbox NAME=glist VALUE=)g
  g glist (\n ,;\t) inlist {( CHECKED)} if
  (> )g(&nbsp;&nbsp;&nbsp;&nbsp;</TD>)
  col ncol eq {(</TR>) /col 0 def} if
} forall
col {(</TR>)} if
(</TABLE>
<HR>\n)
} if
(The users whose logins are listed below may also )
fishbowl{(post to)} {(access)} ifelse
( the <EM>)conf(</EM> )Conference
(.
<P>
<STRONG>Enter one login name per line:</STRONG>
<BR>
)

% the form
conf {(<INPUT TYPE="hidden" NAME=conf VALUE=)conf(>)} if
csel {(<INPUT TYPE="hidden" NAME=csel VALUE=)csel(>)} if
/goto defined {(<INPUT TYPE="hidden" NAME=goto VALUE=)goto(>)} if
(<TEXTAREA NAME=ulist ROWS=20 COLS=)loginlen 1 +( WRAP=OFF>)
(*ulist) read
(</TEXTAREA>
<BR>
<INPUT TYPE=hidden NAME="go" VALUE="1">
<INPUT TYPE=submit VALUE="Update">
</FORM>
Goto <A HREF=begin>)entrance_button(</A> or
<A HREF="confhome?conf=)conf(&csel=)csel(">)confhome_button(</A>
)
global_footer
(</BODY></HTML>
)

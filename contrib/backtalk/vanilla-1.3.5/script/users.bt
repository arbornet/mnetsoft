% Backtalk Vanilla Interface -- (c) 1996 Steve Weiss, Jan Wolter
%
% from=loginname   - start the scan after this user.
% pattern=         - show only users whose name or login contains this string.
%		     (if not defined, do no search, just give form)
%		     (if null, show all users)

/maxperpage 40 def

/titl [(List of ) bbsname ( users) /from defined {( continued)} if] def

(<HTML>
<HEAD>
<TITLE>)titl(</TITLE>\n)
(U) flavor(meta)+ include
(</HEAD>
<BODY><H1>)titl(</H1>
)

(<FORM METHOD=POST ACTION=")SCRIPT_NAME(/)flavor(users">
Find users with names or logins containing:<BR>
<INPUT TYPE=text NAME=pattern SIZE=40)
/pattern defined {( VALUE=)pattern}if
(><INPUT TYPE=submit VALUE="Do Scan"><BR>
(leave blank to list all users)
</FORM><P>
)

/pattern defined {
  % set up for the search
  pattern {
    () pattern 1 search pop	% compile the search pattern
    /checkpat {uname () 1 search -1 ne ufname () 1 search -1 ne or} def
  } {
    /checkpat 1 def
  } ifelse

  (Matches Found:<UL>\n)
  print
  
  % goto the first user
  /from defined {
    from seekuser nextuser
  }{
    firstuser
  } ifelse
  
  % loop through the rest of the users
  /i 0 def
  { dup ! {pop break} if
    dup /uname xdef
    /pushuser defined {
      % Backtalk 1.4 or later
      [/usrname /usrstat] pushuser pop /status xdef /ufname xdef
    } {
      % Backtalk 1.3 or earlier
      userinfo /status xdef pop pop /ufname xdef pop pop
    } ifelse
    checkpat {
      (<LI><a href=bio?login=)uname(>)uname(</A> - )ufname
      status { status 1 eq {( [u)} {( [i)} ifelse (validated])} if
      (\n)
      print
      /i inc i maxperpage ge { break } if
    } if
    nextuser
  } loop
  
  (</UL><P>\n)

  i maxperpage lt {
    (<EM>end of list</EM>)
  } {
    (<a href=users?from=)uname
    /pattern defined {(&pattern=)pattern} if
    (>More Matches</A>)
  } ifelse

} if

(
</BODY></HTML>
)

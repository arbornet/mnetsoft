#

# BACKTALK VERSIONS
BACKTALK=	backtalk-1.3.30
BUBBLEGUM=	bubblegum-1.2.4
GUMBALL=	gumball-0.1.0
PAPAYA=		papaya-1.1.5
VANILLA=	vanilla-1.3.5
CINNAMON=	cinnamon-0.8.6
FRONTTALK=	fronttalk-0.9.2

GATEDIR=	gate/gate-2.06
BACKTALKDIR=	backtalk/$(BACKTALK)
FRONTTALKDIR=	fronttalk/$(FRONTTALK)
PARTYDIR=	party/party-2.12
ORVILLEDIR=	orville/orville-write-2.55

PREFIX=		/arbornet
BINDIR=		$(PREFIX)/bin
ETCDIR=		$(PREFIX)/etc
LIBDIR=		$(PREFIX)/lib
LIBEXECDIR=	$(PREFIX)/libexec
MANDIR=		$(PREFIX)/man
SBINDIR=	$(PREFIX)/sbin
VARDIR=		$(PREFIX)/var

SUIDBIN=	/suid/bin

WWWPREFIX=	/var/www
HTDOCSDIR=	$(WWWPREFIX)/htdocs
CGIBINDIR=	$(WWWPREFIX)/cgi-bin

WEBSITE=	https://m-net.arbornet.org/

all:
	@echo 'Run make [configure|build|install|clean|distclean]'

oldconfigure:
	@echo 'Configuring backtalk....'
	(cd $(BACKTALKDIR) && \
	 rm -f config.cache && \
	 ./configure \
	    --prefix=$(PREFIX) \
	    --htmldir=$(HTDOCSDIR)/${BACKTALK} \
	    --docdir=$(HTDOCSDIR)/${BACKTALK} \
	    --htmlurl=$(WEBSITE)/backtalk \
	    --cgidir=$(CGIBINDIR) \
	    --cgiurl=$(WEBSITE)/cgi-bin \
	    --httpd-id=www \
	    --owner-id=cfadm \
	    --owner-group=cfadmg \
	    --admin-group=cfadmg \
	    --bindir=$(SBINDIR) \
	    --libexecdir=$(LIBEXECDIR)/${BACKTALK} \
	    --bbsdir=/cyberspace/grex/bbs \
	    --scriptdir=$(LIBDIR)/${BACKTALK}/script \
	    --etcdir=$(LIBDIR)/${BACKTALK} \
	    --logdir=/var/log \
	    --mandir=$(MANDIR) \
	    --login=basic \
	    --auth=shadow \
	    --ident=authfile \
	    --group=unix \
	    --session=none \
	    --disable-edituser \
	    --with-aspell \
	    --with-picospan \
	    --enable-exec \
	    --disable-attachments)
	    #--lastlog=unix \

	@echo 'Configuring fronttalk....'
	(cd $(FRONTTALKDIR) && true)

configure:
	@echo 'Configuring gate....'
	(cd $(GATEDIR) && \
	 ./configure \
	    --prefix=$(PREFIX) \
	    --with-aspell \
	    --with-picospan \
	    --with-editor=nano)

	@echo 'Configuring party....'
	(cd $(PARTYDIR) && \
	 ./configure \
	    --prefix=$(PREFIX)/m-net \
	    --with-suid=party \
	    --bindir=$(SUIDBIN) \
	    --localstatedir=$(PREFIX)/m-net/var \
	    --sysconfdir=$(PREFIX)/m-net/etc)

	@echo 'Configuring orville write....'
	(cd $(ORVILLEDIR) && ./configure --prefix=$(PREFIX))

build:
	@echo 'Building backtalk....'
	(cd $(BACKTALKDIR) && make && cd src && make shy)

	@echo 'Building fronttalk....'
	(cd $(FRONTTALKDIR) && true)

	@echo 'Building gate....'
	(cd $(GATEDIR) && make)

	@echo 'Building party....'
	(cd $(PARTYDIR) && make)

	@echo 'Building orville write....'
	(cd $(ORVILLEDIR) && make)

install:
	@echo 'Installing backtalk....'
	(cd $(BACKTALKDIR)/.. && sh install)

	@echo 'Installng fronttalk....'
	(cd $(FRONTTALKDIR) && true)

	@echo 'Installing gate....'
	(cd $(GATEDIR) && make install)

	@echo 'Installing party....'
	(cd $(PARTYDIR) && \
	    install -c -o party -g bin -m 4711 party $(SUIDBIN)/party && \
	    install -c -o party -g bin -m 755 \
	        ../party.wrapper $(BINDIR)/party && \
	    install -c -o root -g wheel -m 644 party.1 $(MANDIR)/man1 && \
	    install -c -o root -g wheel -m 755 \
	        ../roll_party_log $(LIBEXECDIR) && \
	    ln -fs $(SUIDBIN)/party $(BINDIR)/cafe && \
	    ln -fs $(SUIDBIN)/party $(BINDIR)/silicon && \
	    ln -fs $(SUIDBIN)/party $(BINDIR)/pwho && \
	    ( [ -d $(VARDIR)/party ] || mkdir $(VARDIR)/party ) && \
	    chown party:partyadm $(VARDIR)/party && \
	    chmod 775 $(VARDIR)/party && \
	    ( [ -d $(VARDIR)/party/log ] || mkdir $(VARDIR)/party/log ) && \
	    chown party:partyadm $(VARDIR)/party/log && \
	    chmod 775 $(VARDIR)/party/log && \
	    ( rm -f $(VARDIR)/party/log/partytmp; \
	        install -c -o party -g partyadm -m 664 \
		    /dev/null $(VARDIR)/party/log/partytmp ) && \
	    ( [ -d $(ETCDIR)/party ] || mkdir $(ETCDIR)/party ) && \
	    chown party:partyadm $(ETCDIR)/party && \
	    chmod 775 $(ETCDIR)/party && \
	    touch $(ETCDIR)/party/party.motd && \
	    for f in partytab chantab noisetab partyhlp party.welcome; do \
	        [ -f $(ETCDIR)/party/$$f ] || install \
		    -c -o party -g partyadm -m 664 ../$$f $(ETCDIR)/party/$$f; \
	    done \
	)

	@echo 'Installing orville write....'
	(cd $(ORVILLEDIR) && \
	    install -c -o root -g tty -m 6711 write mesg amin $(SUIDBIN) && \
	    install -c -o root -g tty -m 2711 mesg amin $(SUIDBIN) && \
	    ln -sf $(SUIDBIN)/write $(BINDIR)/write && \
	    ln -sf $(SUIDBIN)/write $(BINDIR)/chat && \
	    ln -sf $(SUIDBIN)/write $(BINDIR)/jot && \
	    ln -sf $(SUIDBIN)/write $(BINDIR)/tel && \
	    ln -sf $(SUIDBIN)/write $(BINDIR)/telegram && \
	    ln -sf $(SUIDBIN)/mesg $(BINDIR)/messge && \
	    ln -sf $(SUIDBIN)/amin $(BINDIR)/amin && \
	    install -c -o root -g wheel -m 755 huh helpers $(BINDIR) && \
	    ( [ -f $(ETCDIR)/orville.conf ] || \
	        install -c -o root -g wheel -m 755 \
	            ../../../config/root/cyberspace/etc/orville.conf \
		    $(ETCDIR) ) && \
	    ( [ -f $(LIBDIR)/write.help ] || \
	        install -c -o root -g wheel -m 755 \
	            ../write.help $(LIBDIR) ) && \
	    ( [ -f $(LIBDIR)/write.nohelper ] || \
	        install -c -o root -g wheel -m 755 \
	            ../write.nohelper $(LIBDIR) ) && \
	    ( rm -f $(VARDIR)/wrttmp $(VARDIR)/wrthist $(VARDIR)/WriteHelpLog; \
	        install -c -o root -g tty -m 660 \
		    /dev/null $(VARDIR)/wrttmp; \
	        install -c -o root -g tty -m 660 \
	            /dev/null $(VARDIR)/wrthist; \
	        install -c -o root -g tty -m 660 \
	            /dev/null $(VARDIR)/WriteHelpLog ) && \
	    for f in write.1 mesg.1 amin.1 huh.1 helpers.1; do \
	        install -c -o root -g wheel -m 644 $$f $(MANDIR)/man1/$$f; \
	    done \
	)

clean:
	@echo 'Cleaning backtalk....'
	(cd $(BACKTALKDIR) && $(MAKE) clean)

	@echo 'Cleaning fronttalk....'
	(cd $(FRONTTALKDIR) && true)

	@echo 'Cleaning gate....'
	(cd $(GATEDIR) && $(MAKE) clean && rm -f gate.1)

	@echo 'Cleaning party....'
	(cd $(PARTYDIR) && $(MAKE) clean)

	@echo 'Cleaning orville write....'
	(cd $(ORVILLEDIR) && $(MAKE) clean)

distclean:	clean
	@echo 'Distribution cleaning backtalk....'
	(cd $(BACKTALKDIR) && $(MAKE) clean)

	@echo 'Distribution cleaning fronttalk....'
	(cd $(FRONTTALKDIR) && true)

	@echo 'Distribution cleaning gate....'
	(cd $(GATEDIR) && $(MAKE) distclean && rm -f gate.1)

	@echo 'Distribution cleaning party....'
	(cd $(PARTYDIR) && $(MAKE) distclean)

	@echo 'Distribution cleaning orville write....'
	(cd $(ORVILLEDIR) && $(MAKE) distclean)
